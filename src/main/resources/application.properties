server.port=8955
# 数据源 db0,db1,db2
spring.shardingsphere.datasource.names=db0,db1,db2
spring.main.allow-bean-definition-overriding=true
# 第一个数据库
spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db0.jdbc-url=jdbc:mysql://localhost:3306/db0?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.db0.password=root
spring.shardingsphere.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db0.username=root
# 第二个数据库
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.jdbc-url=jdbc:mysql://localhost:3306/db1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.db1.password=root
spring.shardingsphere.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db1.username=root
# 第三个数据库
spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db2.jdbc-url=jdbc:mysql://localhost:3306/db2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.db2.password=root
spring.shardingsphere.datasource.db2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db2.username=root



# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=db$->{id % 3}
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE

# 分表策略 其中book为逻辑表 分表主要取决于id行，可调整，当前用count
spring.shardingsphere.rules.sharding.sharding-algorithms.tables-inline.props.algorithm-expression=book_$->{count % 3}
spring.shardingsphere.rules.sharding.sharding-algorithms.tables-inline.type=INLINE
spring.shardingsphere.rules.sharding.tables.book.actual-data-nodes=db$->{0..2}.book_$->{0..2}
spring.shardingsphere.rules.sharding.tables.book.table-strategy.standard.sharding-algorithm-name=tables-inline
spring.shardingsphere.rules.sharding.tables.book.table-strategy.standard.sharding-column=count


# 打印执行的数据库以及语句
spring.shardingsphere.rules.props.show-sql=true

#读写分离
sharding.jdbc.datasource.dsmaster =